#!/usr/bin/perl
#
# Copyright 2014 ByWater Solutions

# 
# This file is part of Koha.
# 
# Koha is free software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
# 
# Koha is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with Koha; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

use Modern::Perl;

use C4::Breeding qw( RunZ3950 );
use C4::Service;
use Encode qw( encode_utf8 );

use sort 'stable';

my ( $query, $response ) = C4::Service->init( catalogue => 1 );

my ( $query_string, $servers ) = C4::Service->require_params( 'q', 'servers' );

my $server_hits = {};
my $server_errors = {};

my $offset = $query->param( 'offset' ) || 0;
my $page_size = $query->param( 'page_size' ) || 20;
my $fetched = $query->param( 'fetched' ) || 100;
my $empty_flip = -1; # Determines the flip of ordering for records with empty sort keys.

my @server_ids = split( /,/, $servers );

my $stats = RunZ3950( \@server_ids, $query_string, {
    on_error => sub {
        my ( $server, $exception ) = @_;

        $server_errors->{ $server->{id} } = $exception->message;
    },
    on_hit => sub {
        my ( $server, $hit ) = @_;

        push @{ $server_hits->{ $server->{id} } }, { server => $server->{id},
            index => $hit->{index},
            record => encode_utf8( $hit->{record}->as_xml_record() ),
            metadata => $hit->{metadata}
        };
    },

    offset => 0,
    fetch => $fetched,
} );

my @hits;

foreach my $id ( @server_ids ) {
    warn scalar @{ $server_hits->{$id} ||= [] } . ' hits from ' . $id;
}

# Interleave hits; should be replaced by actual relevance ranking at some point
foreach my $i ( 0..$fetched ) {
    foreach my $id ( @server_ids ) {
        my $hit = shift @{ $server_hits->{ $id } };
        next unless ( $hit );

        ( $hit->{sort_key} = $hit->{metadata}->{title} || '' ) =~ s/\W//g;
        push @hits, $hit;
    }
}

@hits = sort {
    # Sort empty records at the end
    return -$empty_flip unless $a->{sort_key};
    return $empty_flip unless $b->{sort_key};

    $a->{sort_key} cmp $b->{sort_key};
} @hits;

my @hits_subset;

foreach my $i ( $offset..( $offset + $page_size - 1 ) ) {
    push @hits_subset, $hits[$i] if $hits[$i];
}

$response->param(
    offset => $offset,
    page_size => $page_size,
    errors => $server_errors,
    hits => \@hits_subset,
    %$stats
);

C4::Service->return_success( $response );
