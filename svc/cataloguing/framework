#!/usr/bin/perl

use Modern::Perl '2009';

use CGI;
use C4::Branch;
use C4::ClassSource;
use C4::Context;
use C4::Biblio;
use C4::Service;

my ( $query, $response ) = C4::Service->init( editcatalogue => 'edit_catalogue' );

my $frameworkcode = $query->param( 'frameworkcode' ) // '';

my $tagslib = GetMarcStructure( 1, $frameworkcode );

my @tags;

foreach my $tag ( sort keys %$tagslib ) {
    my $taglib = $tagslib->{$tag};
    my $taginfo = { map { $_, $taglib->{$_} } grep { length $_ > 1 } keys %$taglib };
    $taginfo->{subfields} = [ map { [ $_, $taglib->{$_} ] } grep { length $_ == 1 } sort keys %$taglib ];

    push @tags, [ $tag, $taginfo ];
}

my $dbh = C4::Context->dbh;
my $authorised_values = {};

$authorised_values->{branches} = [];
my $onlymine=C4::Context->preference('IndependentBranches') &&
        C4::Context->userenv &&
        C4::Context->userenv->{flags} % 2 == 0 &&
        C4::Context->userenv->{branch};
my $branches = GetBranches($onlymine);
foreach my $thisbranch ( sort keys %$branches ) {
    push @{ $authorised_values->{branches} }, { value => $thisbranch, lib => $branches->{$thisbranch}->{'branchname'} };
}

$authorised_values->{itemtypes} = $dbh->selectall_arrayref( q{
    SELECT itemtype AS value, description AS lib FROM itemtypes ORDER BY description
}, { Slice => {} } );

my $class_sources = GetClassSources();

my $default_source = C4::Context->preference("DefaultClassificationSource");

foreach my $class_source (sort keys %$class_sources) {
    next unless $class_sources->{$class_source}->{'used'} or
                ($class_source eq $default_source);
    push @{ $authorised_values->{cn_source} }, { value => $class_source, lib => $class_sources->{$class_source}->{'description'} };
}

my $branch_limit = C4::Context->userenv ? C4::Context->userenv->{"branch"} : "";
my $auth_query = "SELECT category, authorised_value, lib
            FROM authorised_values";
$auth_query .= qq{ LEFT JOIN authorised_values_branches ON ( id = av_id )} if $branch_limit;
$auth_query .= " AND ( branchcode = ? OR branchcode IS NULL )" if $branch_limit;
$auth_query .= " GROUP BY lib ORDER BY lib, lib_opac";
my $authorised_values_sth = $dbh->prepare( $auth_query );
$authorised_values_sth->execute(
    $branch_limit ? $branch_limit : (),
);

while ( my ( $category, $value, $lib ) = $authorised_values_sth->fetchrow_array ) {
    $authorised_values->{$category} ||= [];
    push @{ $authorised_values->{$category} }, { value => $lib, lib => $lib };
}

$response->param( framework => \@tags, authorised_values => $authorised_values );

C4::Service->return_success( $response );
